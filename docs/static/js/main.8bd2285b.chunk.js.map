{"version":3,"sources":["logo.svg","utils/distance-converter.js","component/js/converter.js","App.js","reportWebVitals.js","index.js"],"names":["DistanceCoverter","this","distanceRank","mm","cm","m","km","distanceFractor","sourceUnits","sourceValue","destUnits","destValue","needToggle","temp","undefined","sourceRank","destRank","convertionFactor","calculateConvertionFactor","source_value","destination_value","resultFactor","start","indexOf","end","i","distanceCoverter","Converter","state","source","destination","event","setState","target","value","setTimeout","handleSourceInput","document","getElementById","handleDestInput","convertedValues","convert","Fragment","id","name","className","onChange","handleSourceSelection","type","placeholder","onFocus","handleFocus","handleDestSelection","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8bd2285b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default class DistanceCoverter {\n\n    constructor() {\n\n        this.distanceRank = {\n            mm : 1,\n            cm : 10,\n            m : 100,\n            km : 1000\n        };\n\n        this.distanceFractor = [1, 10, 100, 1000];\n    }\n    \n    convert(sourceUnits, sourceValue, destUnits, destValue) {\n\n        let distanceRank = this.distanceRank;\n\n        let needToggle = false;\n\n        if(!sourceValue) {\n\n            needToggle = true;\n\n            let temp = sourceUnits;\n\n            sourceValue = destValue;\n            sourceUnits = destUnits;\n\n            destValue = undefined;\n            destUnits = temp;\n        }\n\n        let sourceRank = distanceRank[sourceUnits];\n        let destRank = distanceRank[destUnits];\n\n        let convertionFactor = this.calculateConvertionFactor(sourceRank, destRank);\n\n        if(sourceRank < destRank) {\n            destValue = sourceValue / convertionFactor;\n        }\n        else {\n            destValue = sourceValue * convertionFactor;\n        }\n\n        if(needToggle) {\n            needToggle = false;\n            return {\n                source_value : destValue,\n                destination_value : sourceValue\n            };\n        }\n\n        return {\n            source_value : sourceValue,\n            destination_value : destValue\n        };\n    }\n\n    calculateConvertionFactor(sourceRank, destRank) {\n\n        let distanceFractor = this.distanceFractor;\n\n        let resultFactor = 1;\n\n        let start = distanceFractor.indexOf(sourceRank);\n        let end = distanceFractor.indexOf(destRank);\n\n        if(start < 0 || end < 0) {\n            return resultFactor;\n        }\n\n        if(start > end) {\n            let temp = start;\n            start = end;\n            end = temp;\n        }\n\n        for(let i = start + 1; i <= end; i++) {\n            resultFactor = resultFactor * distanceFractor[i];\n        }\n\n        return resultFactor;\n    }\n}","import React from 'react';\nimport \"../css/converter.css\";\nimport DistanceCoverter from \"../../utils/distance-converter\";\n\nlet distanceCoverter = new DistanceCoverter();\n\nexport default class Converter extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            source : \"m\",\n            source_value : 0,\n            destination : \"km\",\n            destination_value : 0\n        };\n    }\n\n    handleSourceSelection(event) {\n        this.setState({\n            source: event.target.value\n        });\n        \n        setTimeout(() => {\n            this.handleSourceInput({\n                target : document.getElementById(\"source-input\")\n            });\n        }, 0);\n    }\n\n    handleDestSelection(event) {\n        this.setState({\n            destination : event.target.value\n        });\n\n        this.handleDestInput({\n            target : document.getElementById(\"destination-input\")\n        });\n    }\n\n    handleSourceInput(event) {\n        let convertedValues = distanceCoverter.convert(\n            this.state.source, \n            event.target.value, //this.state.source_value\n            this.state.destination,\n            undefined\n        );\n\n        this.setState({\n            source_value : convertedValues.source_value,\n            destination_value : convertedValues.destination_value\n        });\n    }\n\n    handleDestInput(event) {\n        let convertedValues = distanceCoverter.convert(\n            this.state.source, \n            undefined,\n            this.state.destination,\n            event.target.value //this.state.destination_value\n        );\n\n        this.setState({\n            source_value : convertedValues.source_value,\n            destination_value : convertedValues.destination_value\n        });\n    }\n\n    handleFocus(event) {\n        if(!event.target.value || event.target.value === \"0\") {\n            event.target.value = undefined;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div id=\"source\">\n                    <select name=\"distance\" className=\"distance\" \n                        value={this.state.source} \n                        onChange={(event) => this.handleSourceSelection(event)} \n                    >\n\n                        <option value=\"mm\">Millimeter</option>\n                        <option value=\"cm\">Centimeter</option>\n                        <option value=\"m\">Meter</option>\n                        <option value=\"km\">Kilometer</option>\n\n                    </select>\n\n                    <input id=\"source-input\" type=\"number\" \n                        placeholder=\"Enter value\" \n                        onChange={(event) => this.handleSourceInput(event)} \n                        value={this.state.source_value}\n                        onFocus={(event) => {this.handleFocus(event)}}\n                    >\n                    </input>\n                </div>\n\n                <div id=\"destination\">\n\n                    <select name=\"distance\" className=\"distance\" \n                        value={this.state.destination} \n                        onChange={(event) => {this.handleDestSelection(event)}}\n                    >\n                        <option value=\"mm\">Millimeter</option>\n                        <option value=\"cm\" >Centimeter</option>\n                        <option value=\"m\">Meter</option>\n                        <option value=\"km\">Kilometer</option>\n\n                    </select>\n\n                    <input id=\"destination-input\" type=\"number\" \n                        placeholder=\"Enter value\" \n                        onChange={(event) => this.handleDestInput(event)} \n                        value={this.state.destination_value}\n                        onFocus={(event) => {this.handleFocus(event)}}\n                    >\n                    </input>\n                \n                </div>\n                \n            </React.Fragment>\n        );\n    }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Converter from \"./component/js/converter\";\n\nfunction App() {\n  return (\n   <Converter></Converter> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}